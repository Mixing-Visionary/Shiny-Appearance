name: Check Pull Request

on:
  pull_request:
    branches: ["master"]
    types: [opened, edited, synchronize, reopened]

jobs:
  check-branch-name:
    runs-on: ubuntu-latest
    steps:
      - name: Check branch name format
        run: |
          branch_name="${{ github.head_ref }}"
          regex="^((SCRUM-[1-9][0-9]*)|(release\/.*))$"
          echo "Branch name: $branch_name"

          if [[ ! "$branch_name" =~ $regex ]]; then
            echo "Error: Branch name does not match the required format: '[Номер задачи]'"
            exit 1
          else
            echo "Branch name is in the correct format."
          fi

  check-pr-title:
    runs-on: ubuntu-latest
    steps:
      - name: Check pull request title format
        run: |
          pr_title="${{ github.event.pull_request.title }}"
          regex="^((SCRUM-[1-9][0-9]*)|(release)) .+$"
          echo "Pull request title: $pr_title"
          
          if [[ ! "$pr_title" =~ $regex ]]; then
            echo "Error: Pull request title does not match the required format: '[Номер задачи] [Описание задачи]'"
            exit 1
          else
            echo "Pull request title is in the correct format."
          fi

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: 19
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build and test
        run: |
          chmod +x gradlew
          ./gradlew build test
